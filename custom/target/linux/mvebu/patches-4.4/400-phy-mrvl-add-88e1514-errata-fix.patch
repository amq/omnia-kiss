--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@ -424,14 +424,39 @@ static int m88e1318_config_aneg(struct p
 static int m88e1510_config_aneg(struct phy_device *phydev)
 {
 	int err;
+	u16 addrreg, reg;
 
 	err = m88e1318_config_aneg(phydev);
 	if (err < 0)
 		return err;
 
-	return marvell_of_reg_init(phydev);
+	err = marvell_of_reg_init(phydev);
+	if (err < 0)
+		return err;
+
+	/* 88E1514 LEDs in Turris */
+	addrreg = phy_read(phydev, 22);
+	phy_write(phydev, 22, 3);
+/*	reg = phy_read(phydev, 16);
+	printk("reg before LED hack: 0x%04x\n",reg); */
+
+	/* Set LED0 mode */
+	phy_write(phydev, 16, 0x1aa1);
+
+	/* Set IRQ enable */
+	reg = phy_read(phydev, 18);
+	reg |= 0x40;
+	phy_write(phydev, 18, reg);
+
+/*	reg = phy_read(phydev, 16);
+	printk("reg after LED hack: 0x%04x\n",reg); */
+
+	phy_write(phydev, 22, addrreg);
+
+	return 0;
 }
 
+
 static int m88e1116r_config_init(struct phy_device *phydev)
 {
 	int temp;
@@ -771,6 +796,47 @@ static int m88e1145_config_init(struct p
 	return 0;
 }
 
+void phy_writebits(struct phy_device *phydev,
+	   u8 reg_num, u16 offset, u16 len, u16 data)
+{
+	u16 reg, mask;
+
+	if ((len + offset) >= 16)
+		mask = 0 - (1 << offset);
+	else
+		mask = (1 << (len + offset)) - (1 << offset);
+
+	reg = phy_read(phydev, reg_num);
+
+	reg &= ~mask;
+	reg |= data << offset;
+
+	phy_write(phydev, reg_num, reg);
+}
+
+static int m88e1510_config_init(struct phy_device *phydev)
+{
+	/* Turris hack for 88E1514 - taken from U-Boot */
+	phy_write(phydev, 22, 0x00ff);
+	phy_write(phydev, 17, 0x214B);
+	phy_write(phydev, 16, 0x2144);
+	phy_write(phydev, 17, 0x0C28);
+	phy_write(phydev, 16, 0x2146);
+	phy_write(phydev, 17, 0xB233);
+	phy_write(phydev, 16, 0x214D);
+	phy_write(phydev, 17, 0xCC0C);
+	phy_write(phydev, 16, 0x2159);
+	phy_write(phydev, 22, 0x0000); 
+	phy_write(phydev, 22, 18);
+	phy_writebits(phydev, 20, 0, 3, 1);
+
+	phy_writebits(phydev, 20, 15, 1, 1);
+	phy_write(phydev, 22, 0);
+	/* End of turris hack */
+
+	return m88e1111_config_init(phydev);
+}
+
 /* marvell_read_status
  *
  * Generic status code does not detect Fiber correctly!
@@ -1144,6 +1210,7 @@ static struct phy_driver marvell_drivers
 		.name = "Marvell 88E1510",
 		.features = PHY_GBIT_FEATURES,
 		.flags = PHY_HAS_INTERRUPT,
+		.config_init = &m88e1510_config_init,
 		.config_aneg = &m88e1510_config_aneg,
 		.read_status = &marvell_read_status,
 		.ack_interrupt = &marvell_ack_interrupt,
